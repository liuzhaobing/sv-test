syntax = "proto3";
package nlu.v1;
option go_package = "nlp-classify-server/api/classify/v1;v1";

service Classify{
  rpc IntentRecognize( NluRequest) returns (NluResponse){
  };
  rpc GetNluVersion (VersionRequest) returns (VersionResponse){
  };
}

message NluRequest{
    string Query = 1 [ json_name = "query" ];
    string TraceId = 2 [json_name = "traceid" ];
    string Context = 3 [json_name = "context"];
    int32 AgentId = 4 [json_name = "agentid"];
    string RobotName = 5 [json_name = "robot_name"];
    repeated  NluEntity SlotList = 6 [json_name = "parameters"];
}

message NluEntity{
    string entity_type  = 1 [ json_name = "entitytype"];
    string value = 2;
    string before_value  = 3[ json_name = "beforevalue"];
    string name  = 4;
}

message NluResponse{
    int32 status = 1;
    string message = 2;
    string version = 3;
    NluResult data = 4;
}

message NluResult {
    string algo = 1;
    string domain_name = 2 [ json_name = "domainname"];
    string intent_name = 3[ json_name = "intentname"];
    repeated  NluEntity parameters = 4;
    float score = 5;
    DebugInfo debugInfo = 6;
}

message DebugInfo {
  string intent_input = 1 [ json_name = "intent_input"];
  string intent_output = 2 [ json_name = "intent_output"];
  string domain_input = 3 [ json_name = "domain_input"];
  string domain_output = 4 [ json_name = "domain_output"];
  repeated  NluEntity entity_trie = 5 [ json_name = "entity_trie"];
  repeated  NluEntity ner_entity = 6 [ json_name = "ner_entity"];
}

message VersionRequest{
}

message VersionResponse{
  string version = 1;
}