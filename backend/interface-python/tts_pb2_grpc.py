# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import tts_pb2 as tts__pb2


class CloudMindsTTSStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.Call = channel.unary_stream(
                '/ttsschema.CloudMindsTTS/Call',
                request_serializer=tts__pb2.TtsReq.SerializeToString,
                response_deserializer=tts__pb2.TtsRes.FromString,
                )
        self.GetVersion = channel.unary_unary(
                '/ttsschema.CloudMindsTTS/GetVersion',
                request_serializer=tts__pb2.VerVersionReq.SerializeToString,
                response_deserializer=tts__pb2.VerVersionRsp.FromString,
                )
        self.GetTtsConfig = channel.unary_unary(
                '/ttsschema.CloudMindsTTS/GetTtsConfig',
                request_serializer=tts__pb2.VerReq.SerializeToString,
                response_deserializer=tts__pb2.RespGetTtsConfig.FromString,
                )


class CloudMindsTTSServicer(object):
    """Missing associated documentation comment in .proto file."""

    def Call(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetVersion(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetTtsConfig(self, request, context):
        """获取服务端配置信息
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_CloudMindsTTSServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'Call': grpc.unary_stream_rpc_method_handler(
                    servicer.Call,
                    request_deserializer=tts__pb2.TtsReq.FromString,
                    response_serializer=tts__pb2.TtsRes.SerializeToString,
            ),
            'GetVersion': grpc.unary_unary_rpc_method_handler(
                    servicer.GetVersion,
                    request_deserializer=tts__pb2.VerVersionReq.FromString,
                    response_serializer=tts__pb2.VerVersionRsp.SerializeToString,
            ),
            'GetTtsConfig': grpc.unary_unary_rpc_method_handler(
                    servicer.GetTtsConfig,
                    request_deserializer=tts__pb2.VerReq.FromString,
                    response_serializer=tts__pb2.RespGetTtsConfig.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'ttsschema.CloudMindsTTS', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class CloudMindsTTS(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def Call(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/ttsschema.CloudMindsTTS/Call',
            tts__pb2.TtsReq.SerializeToString,
            tts__pb2.TtsRes.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetVersion(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ttsschema.CloudMindsTTS/GetVersion',
            tts__pb2.VerVersionReq.SerializeToString,
            tts__pb2.VerVersionRsp.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetTtsConfig(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ttsschema.CloudMindsTTS/GetTtsConfig',
            tts__pb2.VerReq.SerializeToString,
            tts__pb2.RespGetTtsConfig.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
